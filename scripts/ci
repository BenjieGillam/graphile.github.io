#!/usr/bin/env bash

set -e
# DO NOT 'set -x' as it could leak the GITHUB_TOKEN

yarn test

echo "########################################"
echo "#"
echo "# Checking for unformatted/out of date files"
echo "#"
echo "# Ref: $GITHUB_REF"
echo "# Base ref: $GITHUB_BASE_REF"
echo "#"
echo

echo "Undoing changes to autogenerated files"
git checkout -- src/data/examples.json
git checkout -- src/pages/postgraphile/usage-*.md

if [ "$GITHUB_TOKEN" != "" ] && [ "$GITHUB_BASE_REF" == "" ] && [ "$GITHUB_REF" == "refs/heads/develop" ]; then
  echo "GITHUB_TOKEN is specified"
  git config user.email "co"''"de"@"benjie""gillam"'.'"com"
  git config user.name "Benjie Gillam"

  # git diff-index only looks at modified timestamps; this update-index call
  # forces git to recognise that certain files are unmodified.
  git update-index -q --really-refresh
  if ! git diff-index --exit-code --name-status HEAD --; then
    echo "But first; there were changes so lets try and push those back to 'develop'"
    git add -u
    git commit -m"autofix: fixes from CI"

    git push origin HEAD:develop
  fi
  echo
  echo "#"
  echo "# LGTM!"
  echo "#"
  echo "########################################"
  echo
  echo "Okay; time to deploy..."
  scripts/deploy
elif ! git diff-index --exit-code --name-only HEAD --; then
  echo
  echo "# The above changes should be incorporated into your local branch"
  echo '# Do so by running `yarn update` and `yarn format`'
  echo "#"
  echo "# DON'T WORRY - if you don't have time to do this now, CI will attempt to do it for you when the PR is merged"
  echo "#"
  echo "########################################"
else
  echo
  echo "#"
  echo "# LGTM!"
  echo "#"
  echo "########################################"
fi
